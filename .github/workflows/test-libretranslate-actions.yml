name: API tests sequential by language with GitHub Test UI

on: push

jobs:
  automated-api-tests:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      - name: Run tests by language (JUnit output)
        run: |
          mkdir results
          files=(data/*.csv)
          total=${#files[@]}
          count=0

          for file in "${files[@]}"; do
            count=$((count+1))
            lang=$(basename "$file" .csv)
            echo "Running $lang..."
            postman collection run "47459137-e4cf5999-402a-4b4e-b80b-cbaf4547191e" \
              -e "47459137-3ab14281-d670-447c-baef-f3d7af002759" \
              --iteration-data "$file" \
              --reporters cli,junit \
              --reporter-junit-export "results/${lang}.xml" || true # Keep running even if one fails

            if [ $count -lt $total ]; then
              echo "Sleeping 60 seconds..."
              sleep 60
            fi
          done

      - name: Upload test results to GitHub Tests UI
        uses: dorny/test-reporter@v1
        with:
          name: Postman API Tests           
          path: results/*.xml               
          reporter: java-junit                   
          fail-on-error: false              

      - name: Always upload XML files as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postman-junit-results
          path: results/*.xml
  
  ui-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci || npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --reporter=junit --output=results

      - name: Upload UI test results to GitHub Tests UI
        uses: actions/upload-test-results@v1
        with:
          files: results/*.xml

      - name: Upload screenshots and videos on failure
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-failures
          path: test-results/**/*
